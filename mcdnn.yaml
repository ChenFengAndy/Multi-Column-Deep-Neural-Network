!obj:pylearn2.train.Train {

    dataset: &train !obj:create_dataset.load_dataset {
        which_set: 'train',
    },

    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 128,

        input_space: !obj:pylearn2.space.CompositeSpace {
          components: [
              !obj:pylearn2.space.Conv2DSpace {
              shape: [32, 32],
              num_channels: 3,
              axes: ['c', 0, 1, 'b']
              },
              !obj:pylearn2.space.Conv2DSpace {
              shape: [32, 32],
              num_channels: 3,
              axes: ['c', 0, 1, 'b']
              }
           ],
        },
        input_source: ['features0', 'features1'],

        layers: [
                 !obj:pylearn2.models.mlp.CompositeLayer {
                    layer_name: 'h0',
                        layers: [
                            !obj:pylearn2.models.mlp.MLP {
                              layer_name: 'column0',
                              layers: [
                                  !obj:pylearn2.models.maxout.MaxoutConvC01B {
                                     layer_name: 'column0conv1',
                                     pad: 0,
                                     num_channels: 32,
                                     num_pieces: 1,
                                     kernel_shape: [5, 5],
                                     pool_shape: [3, 3],
                                     pool_stride: [2, 2],
                                     irange: .01,
                                     min_zero: True,
                                     W_lr_scale: 1.,
                                     b_lr_scale: 2.,
                                     tied_b: True,
                                     max_kernel_norm: 9.9,
                                  },
                                  !obj:pylearn2.models.mlp.Softmax {
                                     layer_name: 'column0y1',
                                     n_classes: 10,
                                     istdev: .01,
                                     W_lr_scale: 1.,
                                     b_lr_scale: 2.,
                                     max_col_norm: 9.9365
                                  },

                              ],
                            },
                            !obj:pylearn2.models.mlp.MLP {
                              layer_name: 'column1',
                              layers: [
                                  !obj:pylearn2.models.maxout.MaxoutConvC01B {
                                     layer_name: 'column1conv1',
                                     pad: 0,
                                     num_channels: 32,
                                     num_pieces: 1,
                                     kernel_shape: [5, 5],
                                     pool_shape: [3, 3],
                                     pool_stride: [2, 2],
                                     irange: .01,
                                     min_zero: True,
                                     W_lr_scale: 1.,
                                     b_lr_scale: 2.,
                                     tied_b: True,
                                     max_kernel_norm: 9.9,
                                  },
                                  !obj:pylearn2.models.mlp.Softmax {
                                     layer_name: 'column1y1',
                                     n_classes: 10,
                                     istdev: .01,
                                     W_lr_scale: 1.,
                                     b_lr_scale: 2.,
                                     max_col_norm: 9.9365
                                  },

                              ],
                            },

                        ],
                    inputs_to_layers: {
                            0: [0],
                            1: [1],
                    },

                 }, # end composite layer
                 !obj:AverageLayer.Average {
                    layer_name: 'sum'
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                    layer_name: 'y',
                    n_classes: 10,
                    istdev: .01,
                    W_lr_scale: 1.,
                    b_lr_scale: 2.,
                    max_col_norm: 9.9365
                 }

                ],
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 128,
        learning_rate: .01,
        init_momentum: .9,
        train_iteration_mode: 'even_shuffled_sequential',
        monitor_iteration_mode: 'even_sequential',
        monitoring_dataset:
            {

                'valid' : !obj:create_dataset.load_dataset {
                            which_set: 'valid'
                          },
                'test'  : !obj:create_dataset.load_dataset {
                            which_set: 'test'
                          },
            },
        cost: !obj:pylearn2.costs.mlp.dropout.Dropout {
            input_include_probs: { 'column0conv1' : .8 , 'column1conv1' : .8 },
            input_scales: { 'column0conv1' : 1., 'column1conv1' : 1. }
        },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 20

        }
    },
    save_path: "simple.pkl",
    save_freq: 1
}
