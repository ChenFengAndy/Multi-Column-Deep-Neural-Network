!obj:pylearn2.train.Train {

    dataset: &train !obj:pylearn2.datasets.cifar10.CIFAR10 {
        which_set: 'train',
        one_hot: 1,
        axes: ['b', 0, 1, 'c'],
        start: 0,
        stop: 40000
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 128,
        layers: [

                !obj:pylearn2.models.mlp.CompositeLayer {
                    layer_name: 'composite',
                    layers: [

                        !obj:pylearn2.models.mlp.MLP {
                          layers: [
                                  !obj:custom_layers.PreprocessorBlock {
                                        gcn: 55.
                                  },
                                  !obj:pylearn2.models.mlp.SpaceConverter {
                                    layer_name: 'spconveter0',
                                    output_space: !obj:pylearn2.space.Conv2DSpace {
                                          shape: [32, 32],
                                          num_channels: 3,
                                          axes: ['c', 0, 1, 'b'],
                                      },
                                  },
                                  !obj:custom_layers.PretrainedMLP {
                                    layer_name: 'gcn_column',
                                    layer_content: !pkl: 'pkl/best/singlecolumn_complex_GCN_paper_best.pkl'
                                  }
                                  ]
                        },
                        !obj:pylearn2.models.mlp.MLP {
                          layers: [
                                  !obj:pylearn2.models.mlp.SpaceConverter {
                                    layer_name: 'spconveter2',
                                    output_space: !obj:pylearn2.space.Conv2DSpace {
                                          shape: [32, 32],
                                          num_channels: 3,
                                          axes: ['c', 0, 1, 'b'],
                                      },
                                  },
                                  !obj:custom_layers.PretrainedMLP {
                                    layer_name: 'zca_column',
                                    layer_content: !pkl: 'pkl/best/singlecolumn_complex_ZCA_paper_best.pkl'
                                  }
                                  ]
                        },
                    ],
                    inputs_to_layers:
                    {
                        0: [0],
                        1: [1],
                        2: [2]
                    }
                 },
                 !obj:custom_layers.Average {
                    layer_name: 'avg'
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 10,
                     irange: .005
                 }
                ],
        input_space: !obj:pylearn2.space.Conv2DSpace {
                shape: [32, 32],
                num_channels: 3,
                axes: ['b', 0, 1, 'c']
              }
        },
        input_source: 'features',
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: .1,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: .5,
        },
        train_iteration_mode: 'even_shuffled_sequential',
        monitor_iteration_mode: 'even_sequential',
        monitoring_dataset:
            {
                'train': *train,

                'valid' : !obj:pylearn2.datasets.cifar10.CIFAR10 {
                              axes: ['b', 0, 1, 'c'],
                              which_set: 'train',
                              one_hot: 1,
                              start: 40000,
                              stop:  50000
                          },
                'test'  : !obj:pylearn2.datasets.cifar10.CIFAR10 {
                              axes: ['b', 0, 1, 'c'],
                              which_set: 'test',
                              one_hot: 1,
                          }
            },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 13
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'test_y_misclass',
             save_path: "pkl/best/multicolumn_3COL_best.pkl"
        },
        !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: .6
        },
        !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {
            start: 1,
            saturate: 250,
            decay_factor: .01
        },
    ],
    save_path: "pkl/multicolumn_3COL.pkl",
    save_freq: 5
}
