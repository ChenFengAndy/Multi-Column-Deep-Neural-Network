!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.cifar10.CIFAR10 {
        toronto_prepro: True,
        which_set: 'train',
        one_hot: 1,
        axes: ['c', 0, 1, 'b'],
        start: 0,
        stop: 50000
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 128,
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [32, 32],
            num_channels: 3,
            axes: ['c', 0, 1, 'b'],
        },
        layers: [
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'conv1',
                     pad: 0,
                     num_channels: 32,
                     num_pieces: 1,
                     kernel_shape: [5, 5],
                     pool_shape: [3, 3],
                     pool_stride: [2, 2],
                     irange: .01,
                     min_zero: True,
                     W_lr_scale: 1.,
                     b_lr_scale: 2.,
                     tied_b: True,
                     max_kernel_norm: 9.9,
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     layer_name: 'y',
                     n_classes: 10,
                     istdev: .01,
                     W_lr_scale: 1.,
                     b_lr_scale: 2.,
                     max_col_norm: 9.9365
                 }
                ],
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 128,
        learning_rate: .01,
        init_momentum: .9,
        train_iteration_mode: 'even_shuffled_sequential',
        monitor_iteration_mode: 'even_sequential',
        monitoring_dataset:
            {
                'valid' : !obj:pylearn2.datasets.cifar10.CIFAR10 {
                              toronto_prepro: True,
                              axes: ['c', 0, 1, 'b'],
                              which_set: 'train',
                              one_hot: 1,
                              start: 40000,
                              stop:  50000
                          },
                'test'  : !obj:pylearn2.datasets.cifar10.CIFAR10 {
                              toronto_prepro: True,
                              axes: ['c', 0, 1, 'b'],
                              which_set: 'test',
                              one_hot: 1,
                          }
            },
	cost: !obj:pylearn2.costs.mlp.dropout.Dropout {
            input_include_probs: { 'conv1' : .8 },
            input_scales: { 'conv1' : 1. }
        },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 20

        }
    },
    save_path: "simple.pkl",
    save_freq: 1
}
